# This is a basic workflow to help you get started with Actions

name: cfhost.json Workflow

# Controls when the workflow will run
on:
  schedule:
    - cron: "0 * * * *"
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore: 
      - '.gitignore'
      - 'package-lock.json'
  #  - 'dist/**'
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CF_KV_API: https://api.cloudflare.com/client/v4/accounts/${{secrets.CF_ACCOUNT_ID}}/storage/kv/namespaces/${{secrets.CF_NAMESPACE_ID}}/values
  CF_SCRIPT_API: https://api.cloudflare.com/client/v4/accounts/${{secrets.CF_ACCOUNT_ID}}/workers/scripts
  CFHOST: cfhost
  CFHOSTJSON: cfhost.json
  SCRIPT: v2
  ENTRY: _worker.js

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.
      - id: s1
        name: get cfhost, merge
        run: |
          ret=`curl -H "Authorization:Bearer ${{secrets.CF_API_TOKEN}}" "$CF_KV_API/$CFHOST"`
          if [[ "$ret" == *error* ]]; then
            echo $ret
          elif [ ! -z "$ret" ] && [ ! "$ret" = "[]" ]; then
            #echo `cat $CFHOSTJSON`$ret|sed 's/\]\[/,/' > tmp.json
            echo `cat $CFHOSTJSON`|tr -d '[]'|sed -r 's/, ?/\n/g' > tmp.txt
            echo $ret|tr -d '[]'|sed -r 's/, ?/\n/g'             >> tmp.txt
            echo [$(echo `cat tmp.txt|sort -u`|tr -s ' ' ',')] > $CFHOSTJSON
            #echo 'update_cfhost=true' >> $GITHUB_ENV
          fi
          
      - id: s2
        name: git commit cfhost.json
        run: |          
          if git diff|grep $CFHOSTJSON; then
            git config user.name "GitHub Actions Bot"
            git config user.email "<>"
            git add $CFHOSTJSON
            git commit -m "updated cfhost"
            git push
          else
            echo "cfhost not update"
            if git diff --name-only ${{ github.event.before }} ${{ github.event.after }}|grep -v '\.git*' ; then
              echo "worker code nothing update"
              gh run cancel ${{ github.run_id }}
              gh run watch ${{ github.run_id }}
            fi
          fi
          
      - id: s3
        if: steps.s2.conclusion == 'success'
        name: set up node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          
      - name: build worker
        run: |
          echo "${{github.event.commits[0]}}"
          npm i
          npm run esbuild
          
      - name: upload dist
        uses: actions/upload-artifact@v4
        with:
          name: cf-worker
          path: dist
          
      - name: deploy worker script
        run: |
          [ ! -s "dist/$ENTRY" ] && echo "$ENTRY not found!" && exit;
          curl -i -X PUT -H "Authorization:Bearer ${{secrets.CF_API_TOKEN}}" \
            -H 'Content-Type: multipart/form-data' \
            --form "worker.js=@dist/$ENTRY;type=application/javascript+module" \
            --form 'metadata={"main_module":"'$ENTRY'"}' \
            --url $CF_SCRIPT_API/$SCRIPT/content