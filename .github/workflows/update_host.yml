# This is a basic workflow to help you get started with Actions

name: cfhost Workflow

# Controls when the workflow will run
on:
  schedule:
    - cron: "0 * * * *"
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
  #  branches: [ "main" ]
  #  paths-ignore: 
  #    - '.gitignore'
  #    - 'package-lock.json'
  #  - 'dist/**'
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      deployPage:
        description: 'deploy worker and page (default only worker)'
        required: false
        default: true
        type: boolean
        
  # workflow_call:
    # inputs:
      # proxys: 
        # description: 'proxys json data'
        # required: true
        # type: 'string'

env:
  deployPage: ${{inputs.deployPage||true}}
  CF_KV_API: https://api.cloudflare.com/client/v4/accounts/${{secrets.CF_ACCOUNT_ID}}/storage/kv/namespaces/${{secrets.CF_NAMESPACE_ID}}/values
  CF_SCRIPT_API: https://api.cloudflare.com/client/v4/accounts/${{secrets.CF_ACCOUNT_ID}}/workers/scripts
  CF_PROJECT_API: https://api.cloudflare.com/client/v4/accounts/${{secrets.CF_ACCOUNT_ID}}/pages/projects
  CFHOST: cfhost
  CFHOST_BAK: cfhost_bak
  CFHOST_JSON: cfhost.json
  PROXYS: proxys
  PROXYS_UPDATED: proxys_updated
  PROXYS_JSON: proxys.json
  SCRIPT: v2
  PROJECT: v1
  ENTRY: _worker.js

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with: 
          # https://github.com/orgs/community/discussions/25797#discussioncomment-3249294
          fetch-depth: 0
          
      - id: get-cfhost
        name: get cfhost, merge, backup
        run: |
          merge_backup(){
            local ret=`curl -H "Authorization:Bearer ${{secrets.CF_API_TOKEN}}" "$CF_KV_API/$1"`
            if echo "$ret"|grep error; then
              echo $ret;
            elif [ ! -z "$ret" ] && [ ! "$ret" = "[]" ]; then
              echo $ret|tr -d '[]'|sed -r 's/, ?/\n/g' > tmp.txt
              local bak=`curl -H "Authorization:Bearer ${{secrets.CF_API_TOKEN}}" "$CF_KV_API/$2"`
              if ! echo "$bak"|grep error && [ ! -z "$bak" ] && [ ! "$bak" = "[]" ]; then
                echo $bak|tr -d '[]'|sed -r 's/, ?/\n/g' >> tmp.txt
                ret=[$(echo `cat tmp.txt|sort -u`|tr -s ' ' ',')]
              fi
              echo `cat $3`|tr -d '[]'|sed -r 's/, ?/\n/g' >> tmp.txt
              echo [$(echo `cat tmp.txt|sort -u`|tr -s ' ' ',')] > $3
              curl -X PUT -H "Authorization:Bearer ${{secrets.CF_API_TOKEN}}" \
                -d "$ret" "$CF_KV_API/$2" >> $GITHUB_STEP_SUMMARY
              echo "merge backup $1" >> $GITHUB_STEP_SUMMARY
            fi
          }
          merge_backup $CFHOST $CFHOST_BAK $CFHOST_JSON
          ret=`curl -H "Authorization:Bearer ${{secrets.CF_API_TOKEN}}" "$CF_KV_API/$PROXYS"`
          echo "$ret"|grep error || echo "$ret" > $PROXYS_JSON
          
      - id: check-change
        name: check change of cfhost.json, worker code
        env:
          GH_TOKEN: ${{ github.token }}
          EVENT_NAME: ${{ github.event_name }}
          BEFORE: ${{ github.event.before }}
          AFTER: ${{ github.event.after }}
        run: |
          echo "s2 check change" >> $GITHUB_STEP_SUMMARY
          if ! git diff|grep "$CFHOST_JSON"; then
            # git config user.name "GitHub Actions Bot"
            # git config user.email "<>"
            # git add $CFHOST_JSON
            # git commit -m "updated cfhost"
            # git push
            echo "cfhost no change" >> $GITHUB_STEP_SUMMARY
            # skip when trigger not on schedule # [ -z `git diff --name-only $BEFORE $AFTER 2>&1` ]
            [ $EVENT_NAME != schedule ] && exit;
            # skip when now - (updated time of proxys data) < 7200s
            ret=`curl -H "Authorization:Bearer ${{secrets.CF_API_TOKEN}}" "$CF_KV_API/$PROXYS_UPDATED"`
            echo "$ret"|grep error && exit;
            [ $((`date +%s` - $ret)) -lt 7200 ] && exit;
            echo "on schedule, no need to deploy" >> $GITHUB_STEP_SUMMARY
            gh run cancel ${{ github.run_id }}
            gh run watch ${{ github.run_id }}
          fi
          
      - id: get-proxys
        name: get proxys from calling workflow
        if: ${{ github.event_name == 'workflow_call' }}
        run: |
          [ ! -z ${{ inputs.proxys }} ] && echo ${{ inputs.proxys }} > proxys.json
          
      - name: set up node.js
        if: steps.check-change.conclusion == 'success'
        uses: actions/setup-node@v3
        with:
          node-version: 20
          
      - name: build worker
        run: |
          npm i
          npm run esbuild
          
          
      - name: deploy worker, page
        run: |
          [ ! -s "dist/$ENTRY" ] && echo "$ENTRY not found!" && exit;
          echo "s5 deploy worker.." >> $GITHUB_STEP_SUMMARY
          curl -X PUT -H "Authorization:Bearer ${{secrets.CF_API_TOKEN}}" \
            -H 'Content-Type: multipart/form-data' \
            --form "worker.js=@dist/$ENTRY;type=application/javascript+module" \
            --form 'metadata={"main_module":"'$ENTRY'"}' \
            --url $CF_SCRIPT_API/$SCRIPT/content | tail -n 4 >> $GITHUB_STEP_SUMMARY
          [ ! $deployPage ] && exit;
          echo "deploy page.." >> $GITHUB_STEP_SUMMARY
          curl -X POST -H "Authorization:Bearer ${{secrets.CF_API_TOKEN}}" \
            -H 'Content-Type: multipart/form-data' \
            --form "$ENTRY=@dist/$ENTRY;type=application/javascript" \
            --form 'manifest={}' \
            --form 'branch=test' \
            --url $CF_PROJECT_API/$PROJECT/deployments | tail -n 4 >> $GITHUB_STEP_SUMMARY